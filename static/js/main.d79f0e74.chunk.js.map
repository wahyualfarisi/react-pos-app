{"version":3,"sources":["context/open-order-mobile-context.js","components/UI/Modal/Modal.js","components/Aside/Modal/CheckoutOrder.js","utils/index.js","store/actions/action.js","api/AxiosInstance.js","store/actions/transaction.js","api/transaction.js","components/Aside/Aside.js","store/actions/orders.js","components/Header/Header.js","components/Nav/NavData.js","components/Nav/Nav.js","hoc/Layout.js","store/actions/menu.js","api/menu.js","components/BottomOrder/BottomOrder.js","components/UI/Loader/Loader.js","hooks/useQuantityCounter.js","components/Menu/Modal/ConfirmOrderModal/ConfirmOrderModal.js","components/Categorys/Categorys.js","components/Menu/MenuItem/MenuItem.js","containers/Menu/Menu.js","containers/Transaction/Transaction.js","containers/Transaction/DetailTransaction/DetailTransaction.js","App.js","reportWebVitals.js","store/reducers/menu.js","store/reducers/orders.js","store/reducers/transaction.js","store/reducers/index.js","index.js"],"names":["OrderMenuOnMobileContext","React","createContext","isOpen","onToggle","OrderMenuProvider","children","useState","setIsOpen","Provider","value","prevState","Modal","isShow","onClose","onSubmit","title","isDisabledSubmit","ReactDOM","createPortal","className","onClick","e","stopPropagation","disabled","document","getElementById","CheckoutOrder","formData","changeHandler","formIsValid","Object","values","every","item","isValid","keys","map","i","htmlFor","label","type","name","id","placeholder","spellCheck","required","onChange","error","formatRupiah","angka","prefix","split","replace","toString","sisa","length","rupiah","substr","ribuan","match","join","undefined","LOAD_MENU_START","LOAD_MENU_SUCCESS","LOAD_MENU_FAILED","CLEAR_DATA_MENU","SET_ACTIVE_MENU","LOAD_MORE","SEARCH_MENU","BACK_STATE","ADD_TO_ORDER","REMOVE_ORDER_ITEM","REMOVE_NOTE_ITEM","SHOW_INPUT_ITEM","CHANGE_INPUT_ITEM","CHANGE_QTY_ITEM","CLEAR_ITEM","CREATE_TRX_START","CREATE_TRX_SUCCESS","CREATE_TRX_FAILED","DETAIL_TRX_START","DETAIL_TRX_SUCCESS","DETAIL_TRX_FAILED","LOAD_TRX_START","LOAD_TRX_SUCCESS","LOAD_TRX_FAILED","instance","Axios","create","baseURL","createTransaction","data","callback","dispatch","formdata","post","then","res","payload","results","status","sc_key","catch","err","getTransaction","query","get","fetchTransaction","message","getDetail","detailTransaction","console","log","connect","state","order_data","orders","onRemoveItem","index","onRemoveNote","onShowInput","onChangeInput","changeInput","onChangeQty","type_of","changeQtyItem","onCreateTransaction","form_data","cb","onClearItem","email","pattern","phone_number","form_checkout","setFormCheckout","isOpenModal","setIsOpenModal","OrderMenuMobileCtx","useContext","OpenOrderMobileContext","total","price","qty","reduce","a","b","selectedItem","toggleModalHandler","clearForm","src","photo","alt","menu_name","notes","showInput","event","changeInputHandler","target","slice","FormData","append","forEach","window","location","hash","getField","test","Header","invoiceNumber","transaction","isLoading","onLoadTransaction","page","useEffect","get_items","k","get_menu","exact","to","created_at","no_trx","Layout","getMenu","url","isActiveCategory","searchText","fetchMenu","Loader","useQuantityCounter","initialValue","setQty","operation","ConfirmOrderModal","selectedMenu","changeQtyHandler","setNotes","rows","Categorys","category","setActiveMenu","datapage","categories","_","MenuItem","onSelected","image","menu","onLoadMenu","onAddOrder","items","addToOrder","onClearMenu","onSetActiveMenu","menuName","onLoadMore","onSearchMenu","searchMenu","onBackToState","setSelectedMenu","isOpenConfirmMenu","setIsOpenConfirmMenu","OpenOrderMobileCTX","debounceChangeHandler","useMemo","debounce","cancel","obj","onSelectMenuHandler","last_page","Transaction","detail_transaction","isLoadDetail","errorDetail","onLoadDetail","useParams","DisplayItem","App","path","component","Menu","DetailTransaction","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","inititalState","isLoadingSubmited","errorSubmited","getItem","copyAllData","findIndex","filter","pagination","rootReducers","combineReducers","menuReducers","orderReducers","transactionReducers","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","render","StrictMode"],"mappings":"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","file":"static/js/main.d79f0e74.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst OrderMenuOnMobileContext = React.createContext({\n    isOpen: false,\n    onToggle: () => {}\n});\n\nexport const OrderMenuProvider = ({ children }) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const onToggleHandler = () => {\n        setIsOpen(prevState => !prevState);\n    }\n\n\n    return (\n        <OrderMenuOnMobileContext.Provider value={{\n            isOpen: isOpen,\n            onToggle: onToggleHandler\n        }}>\n            {children}\n        </OrderMenuOnMobileContext.Provider>\n    )\n}\n\n\n\nexport default OrderMenuOnMobileContext;","import ReactDOM from 'react-dom';\nimport './Modal.scss';\n\nconst Modal = ({ \n    isShow, \n    onClose,\n    onSubmit,\n    title,\n    children,\n    isDisabledSubmit = false\n}) => {\n    \n    return ReactDOM.createPortal(\n        <div className={`modal ${isShow && 'show'}`} onClick={onClose}>\n            <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n                <div className=\"modal-header\">\n                    <h4 className=\"modal-title\">{title}</h4>\n                </div>\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n                <div className=\"modal-footer\">\n                    <button \n                        onClick={onClose} \n                        className=\"modal-button modal-button-close mr-small\"\n                    >Close</button>\n                    <button \n                        onClick={onSubmit} \n                        className=\"modal-button modal-button-submit\"\n                        disabled={isDisabledSubmit}\n                        >Submit\n                    </button>\n                </div>\n            </div>\n        </div>\n    , document.getElementById('modal'))\n}\n\nexport default Modal\n","import React from 'react';\nimport Modal from '../../UI/Modal/Modal';\nimport './CheckoutOrder.scss';\n\n\nfunction CheckoutOrder({\n    isOpen,\n    onClose,\n    onSubmit,\n    formData,\n    changeHandler\n}) {\n\n    const formIsValid =  Object.values(formData).every(item => item.isValid === true );\n    \n    const submitHandler = () => {\n        if(formIsValid){\n            onSubmit()\n        }\n    }\n\n    \n    return (\n       <Modal\n            isShow={isOpen}\n            onClose={onClose}\n            title=\"Checkout Confirmation\"\n            onSubmit={submitHandler}\n            isDisabledSubmit={!formIsValid}\n       >\n            <div className=\"CheckoutOrder\">\n                {Object.keys(formData).map((item, i) => {\n                    return (\n                        <div className=\"form-group\" key={i}>\n                            <label htmlFor=\"email\">{formData[item].label}</label>\n                            <input \n                                type={formData[item].type} \n                                name={item} \n                                id={item} \n                                placeholder={formData[item].placeholder} \n                                spellCheck=\"false\"\n                                value={formData[item].value}\n                                required={formData[item].required}\n                                onChange={changeHandler}\n                            />\n                            <div>{formData[item].error}</div>\n                        </div>\n                    )\n                })}\n            </div>\n       </Modal>\n    )\n}\n\nexport default CheckoutOrder\n","export const formatRupiah = (angka, prefix) => {\n    let number_string = angka.replace(/[^,\\d]/g, '').toString(),\n    split   \t\t= number_string.split(','),\n    sisa     \t\t= split[0].length % 3,\n    rupiah     \t\t= split[0].substr(0, sisa),\n    ribuan     \t\t= split[0].substr(sisa).match(/\\d{3}/gi);\n\n    // tambahkan titik jika yang di input sudah menjadi angka ribuan\n    if(ribuan){\n        let separator = sisa ? '.' : '';\n        rupiah += separator + ribuan.join('.');\n    }\n\n    rupiah = split[1] !== undefined ? rupiah + ',' + split[1] : rupiah;\n    return prefix === undefined ? rupiah : (rupiah ? 'Rp. ' + rupiah : '');\n}","export const LOAD_MENU_START = 'LOAD_MENU_START';\nexport const LOAD_MENU_SUCCESS = 'LOAD_MENU_SUCCESS';\nexport const LOAD_MENU_FAILED = 'LOAD_MENU_FAILED';\nexport const CLEAR_DATA_MENU = 'CLEAR_DATA_MENU';\n\n//Menu\nexport const SET_ACTIVE_MENU = 'SET_ACTIVE_MENU';\nexport const LOAD_MORE = 'LOAD_MORE';\nexport const SEARCH_MENU = 'SEARCH_MENU';\nexport const BACK_STATE = 'BACK_STATE';\n\n// ORDER\nexport const ADD_TO_ORDER = 'ADD_TO_ORDER';\nexport const REMOVE_ORDER_ITEM = 'REMOVE_ORDER_ITEM';\nexport const REMOVE_NOTE_ITEM = 'REMOVE_NOTE_ITEM';\nexport const SHOW_INPUT_ITEM = 'SHOW_INPUT_ITEM';\nexport const CHANGE_INPUT_ITEM = 'CHANGE_INPUT_ITEM';\nexport const CHANGE_QTY_ITEM = 'CHANGE_QTY_ITEM';\nexport const CLEAR_ITEM = 'CLEAR_ITEM';\n\n//Transaction\nexport const CREATE_TRX_START = 'CREATE_TRX_START';\nexport const CREATE_TRX_SUCCESS = 'CREATE_TRX_SUCCESS';\nexport const CREATE_TRX_FAILED = 'CREATE_TRX_FAILED';\n\n//Detail\nexport const DETAIL_TRX_START = 'DETAIL_TRX_START';\nexport const DETAIL_TRX_SUCCESS = 'DETAIL_TRX_SUCCESS';\nexport const DETAIL_TRX_FAILED = 'DETAIL_TRX_FAILED';\n\nexport const LOAD_TRX_START = 'LOAD_TRX_START';\nexport const LOAD_TRX_SUCCESS = 'LOAD_TRX_SUCCESS';\nexport const LOAD_TRX_FAILED = 'LOAD_TRX_FAILED';","import Axios from 'axios';\n\nconst instance = Axios.create({\n    baseURL: 'https://api.alfarisilab.com/api'\n});\n\nexport default instance;","import {\n    CREATE_TRX_START,\n    CREATE_TRX_SUCCESS,\n    CREATE_TRX_FAILED,\n    LOAD_TRX_START,\n    LOAD_TRX_SUCCESS,\n    LOAD_TRX_FAILED,\n    DETAIL_TRX_START,\n    DETAIL_TRX_SUCCESS,\n    DETAIL_TRX_FAILED\n} from './action.js';\nimport {\n    create,\n    fetchTransaction,\n    detailTransaction\n} from './../../api/transaction';\n\nexport const createTransaction = (data, callback) => {\n    return dispatch => {\n        dispatch({\n            type: CREATE_TRX_START\n        })\n        create(data)\n            .then(res => {\n                dispatch({\n                    type: CREATE_TRX_SUCCESS,\n                    payload: res.data.results\n                })\n                callback({\n                    status: res.data.status,\n                    sc_key: res.data.results.sc_key\n                })\n                \n            })\n            .catch(err => {\n                dispatch({\n                    type: CREATE_TRX_FAILED\n                })\n            })\n    }\n}\n\nexport const getTransaction = ( query ) => {\n    return dispatch => {\n        dispatch({\n            type: LOAD_TRX_START\n        })\n        fetchTransaction(query)\n            .then(res => {\n                dispatch({\n                    type: LOAD_TRX_SUCCESS,\n                    payload: res.data.results\n                })\n            })\n            .catch(err => {\n                dispatch({\n                    type: LOAD_TRX_FAILED,\n                    error: err.message\n                })\n            })\n    }\n}\n\nexport const getDetail = (id) => {\n    return dispatch => {\n        dispatch({\n            type: DETAIL_TRX_START\n        })\n        detailTransaction(id)\n        .then(res => {\n            console.log(res);\n            dispatch({\n                type: DETAIL_TRX_SUCCESS,\n                payload: res.data.results\n            })\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch({\n                type: DETAIL_TRX_FAILED,\n                error: err.message\n            })\n        })\n    }\n}","import Axios from './AxiosInstance';\n\nexport const create = (formdata) => {\n    return Axios.post('/pos/trx/create', formdata);\n}\n\nexport const fetchTransaction = (query) => {\n    let url = '/pos/trx';\n    return Axios.get(url, query);\n}\n\nexport const detailTransaction = (id) => {\n    return Axios.get(`/pos/trx/${id}`);\n}","import React, { useContext, useState } from 'react';\n\nimport './Aside.scss';\nimport { FiEdit, FiTrash, FiCheck  } from 'react-icons/fi';\nimport OpenOrderMobileContext from './../../context/open-order-mobile-context';\nimport ModalCheckout from './Modal/CheckoutOrder';\nimport { formatRupiah } from './../../utils/index';\nimport { connect } from 'react-redux';\nimport { \n        removeItemOrder, \n        removeNoteItem, \n        showInputItem,\n        changeInput,\n        changeQtyItem,\n        clearItem\n} from './../../store/actions/orders'\nimport {\n    createTransaction\n} from './../../store/actions/transaction';\n\nfunction Aside({\n    order_data,\n\n    //Order\n    onRemoveItem,\n    onRemoveNote,\n    onShowInput,\n    onChangeInput,\n    onChangeQty,\n    onClearItem,\n\n    //Transaction\n    onCreateTransaction\n}) {\n\n    const [ form_checkout, setFormCheckout ] = useState({\n        email: {\n            value: '',\n            isValid: false,\n            required: true,\n            type: 'email',\n            placeholder: 'Enter an email',\n            label: 'Email',\n            pattern: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        },\n        phone_number: {\n            value: '',\n            isValid: false,\n            required: true,\n            type: 'text',\n            placeholder: 'Enter a phone number',\n            label: 'Phone number',\n            pattern: /^(^\\+62|62|^08)(\\d{3,4}-?){2}\\d{3,4}$/,\n            error: ''\n        },\n        name: {\n            value: '',\n            isValid: false,\n            required: true,\n            type: 'text',\n            placeholder: 'Enter an name',\n            label: 'Name',\n            error: ''\n        }\n    });\n    const [isOpenModal, setIsOpenModal] = useState(false);\n\n    const OrderMenuMobileCtx = useContext(OpenOrderMobileContext);\n\n    const subTotalArr = order_data.map(item => item.price * item.qty);\n\n    const total = subTotalArr.reduce((a, b) => a + b , 0);\n   \n    const selectedItem = (index, type) => {\n       \n        switch(type)\n        {\n            case 'remove_item':\n                onRemoveItem(index)\n            return;\n\n            case 'remove_note':\n                onRemoveNote(index)\n            return;\n\n            case 'show_input':\n                onShowInput(index)\n            return;\n\n            case 'increase':\n                case 'decrease':\n                onChangeQty(index, type);\n            return;\n\n            default:\n                return false;\n        }\n    }\n\n    const changeInputHandler = (i, value) => {\n        onChangeInput(i, value)\n    }\n\n    const submitCheckoutHandler = () => {\n       \n        const { email, phone_number, name } = form_checkout\n        const form_data = new FormData();\n        form_data.append('email', email.value);\n        form_data.append('phone_number', phone_number.value);\n        form_data.append('name', name.value);\n\n        order_data.forEach((item, i) => {\n            form_data.append(`menu_id[${i}]`, item.id);\n            form_data.append(`qty[${i}]`, item.qty);\n            form_data.append(`notes[${i}]`, item.notes)\n        })\n        \n        onCreateTransaction(form_data, res => {\n\n            if(res.status) {\n                toggleModalHandler();\n                clearForm()\n                window.location.hash = `/transaction/${res.sc_key}`\n\n                if( OrderMenuMobileCtx.isOpen ){\n                    OrderMenuMobileCtx.onToggle();\n                }\n            }\n        });\n    }\n\n    const toggleModalHandler = () => {\n        setIsOpenModal(prevState => !prevState);\n    }\n\n    const changeFormCheckoutHandler = (e) => {\n        const form = { ...form_checkout };\n        const getField = form[e.target.name];\n        getField.value = e.target.value;\n      \n\n        if(getField.value === '' && getField.required){\n            getField.error = 'Field is Required'\n            getField.isValid = false;\n        }else{\n            getField.error = ''\n            getField.isValid = true;\n        }\n    \n        if(getField.pattern){\n            if(getField.pattern.test(getField.value)){\n                getField.error = ''\n                getField.isValid = true;\n            }else{\n                getField.error = `${getField.label} is not valid`\n                getField.isValid = false;\n            }\n        }\n\n        setFormCheckout(prevState => ({\n            ...prevState,\n            [e.target.name]: getField\n        }))\n    }\n\n    const clearForm = () => {\n        setFormCheckout(prevState => ({\n            ...prevState,\n            email: {\n                ...prevState.email,\n                isValid: false,\n                value: ''\n            },\n            phone_number: {\n                ...prevState.phone_number,\n                isValid: false,\n                value: ''\n            },\n            name: {\n                ...prevState.name,\n                isValid: false,\n                value: ''\n            }\n        }))\n\n    }\n\n    return (\n        <div className={OrderMenuMobileCtx.isOpen ? 'Aside Aside__open' : 'Aside'}>\n            <div className=\"Order\">\n                <div className=\"Order__heading\">\n                    <h1>Order List ({order_data.length}) Item</h1>\n                    {OrderMenuMobileCtx.isOpen && <button onClick={OrderMenuMobileCtx.onToggle}>Close</button>}\n                    \n                </div>\n\n                <div className=\"Order__lists\">\n                    {order_data.map( (item, i) => {\n                        return (\n                        <div key={i} className=\"Order__lists-item\">\n                            <img src={item.photo} alt=\"Makanan\" className=\"Order__Menu_img\" />\n                            <div className=\"Order__Menu\">\n                                <div className=\"Order__Menu_title\">\n                                    <h3>{item.menu_name}</h3>\n                                </div>\n                                <p className=\"mb-small\">{formatRupiah(item.price.toString())}</p>\n                               \n                                {!item.notes && !item.showInput && (\n                                    <button \n                                        className=\"Order__Menu_notes_btn\"\n                                        onClick={() => selectedItem(i, 'show_input')}\n                                        >\n                                        <FiEdit className=\"Order__Menu_notes_icon\" />\n                                        Add Notes\n                                    </button>\n                                )}\n                                {item.showInput && (\n                                    <div>\n                                        <textarea \n                                            className=\"Order__Menu_notes_input\"\n                                            placeholder=\"Set some notes\"\n                                            spellCheck=\"false\"\n                                            value={item.notes}\n                                            onChange={(event) => changeInputHandler(i, event.target.value)}\n                                        />\n                                        <div className=\"Order__Menu_notes_action\">\n                                            <button \n                                                onClick={() => selectedItem(i, 'show_input') }\n                                                className=\"Order__Menu_notes_btn\">\n                                                <FiCheck \n                                                    className=\"Order__Menu_notes_icon\" \n                                                /> Done\n                                            </button>\n                                        </div>\n                                    </div>\n                                )}\n                                {item.notes && !item.showInput && (\n                                    <div className=\"Order__Menu_notes\">\n                                        <p>{item.notes.slice(0, 100)}</p>\n                                        <div className=\"Order__Menu_notes_action\">\n                                            <button \n                                                className=\"Order__Menu_notes_btn\"\n                                                onClick={() => selectedItem(i, 'show_input')}\n                                            >\n                                                <FiEdit className=\"Order__Menu_notes_icon\" /> Edit Note\n                                            </button>\n                                            <button \n                                                onClick={() => selectedItem(i, 'remove_note') }\n                                                className=\"Order__Menu_notes_btn\">\n                                                <FiTrash \n                                                    className=\"Order__Menu_notes_icon\" \n                                                /> Remove Note\n                                            </button>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                            <div className=\"Order__Action\">\n                                <button \n                                    className=\"Order__Action_Remove\" \n                                    onClick={() => selectedItem(i, 'remove_item')} \n                                >\n                                    <FiTrash />\n                                </button>\n                                <button \n                                    className=\"Order__Action_Decrease\"\n                                    onClick={() => selectedItem(i, 'decrease')}\n                                    disabled={item.qty === 1}\n                                    >-\n                                </button>\n                                <span>{item.qty}</span>\n                                <button \n                                    className=\"Order__Action_Increase\"\n                                    onClick={() => selectedItem(i, 'increase')}\n                                    >+\n                                </button>\n                            </div>\n                        </div>\n                        )\n                    })}\n                </div>\n                <div className=\"Order__totals\">\n                    <div>\n                        <h3>Total</h3>\n                        <h1>Rp. {formatRupiah(total.toString())}</h1>\n                        <p>{order_data.length} Items</p>\n                    </div>\n                    <button \n                        className=\"Order__btncancel\"\n                        disabled={order_data.length === 0}\n                        onClick={onClearItem}\n                    >CANCEL</button>\n                    <button \n                        className=\"Order__gopay\"\n                        disabled={order_data.length === 0}\n                        onClick={toggleModalHandler}\n                        >ORDER NOW\n                    </button>\n                </div>\n            </div>\n\n\n            <ModalCheckout \n                isOpen={isOpenModal}\n                onSubmit={submitCheckoutHandler}\n                onClose={toggleModalHandler}\n                formData={form_checkout}\n                changeHandler={changeFormCheckoutHandler}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        order_data: state.orders.data\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onRemoveItem: (i) => dispatch( removeItemOrder(i) ),\n        onRemoveNote: (i) => dispatch( removeNoteItem(i) ),\n        onShowInput: (i) => dispatch( showInputItem(i) ),\n        onChangeInput: (i, value) => dispatch( changeInput(i, value) ),\n        onChangeQty: (i, type_of) => dispatch( changeQtyItem(i, type_of) ),\n        onCreateTransaction: (form_data, cb) => dispatch( createTransaction(form_data, cb) ),\n        onClearItem: () => dispatch( clearItem() )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Aside)\n","import { ADD_TO_ORDER, CHANGE_INPUT_ITEM, CHANGE_QTY_ITEM, CLEAR_ITEM, REMOVE_NOTE_ITEM, REMOVE_ORDER_ITEM, SHOW_INPUT_ITEM } from './action';\n\nexport const addToOrder = ( items ) => {\n    return (dispatch) => {\n        dispatch({\n            type: ADD_TO_ORDER,\n            payload: items\n        })\n    }\n}\n\n\nexport const removeItemOrder = index => {\n    return dispatch => {\n        dispatch({\n            type: REMOVE_ORDER_ITEM,\n            index\n        })\n    }\n}\n\nexport const removeNoteItem = index => {\n    return dispatch => {\n        dispatch({\n            type: REMOVE_NOTE_ITEM,\n            index\n        })\n    }\n}\n\nexport const showInputItem = index => {\n    return dispatch => {\n        dispatch({\n            type: SHOW_INPUT_ITEM,\n            index\n        })\n    }\n}\n\nexport const changeInput = (index, value) => {\n    return dispatch => {\n        dispatch({\n            type: CHANGE_INPUT_ITEM,\n            index,\n            value\n        })\n    }\n}\n\nexport const changeQtyItem = (index, type_of) => {\n    return dispatch => {\n        dispatch({\n            type: CHANGE_QTY_ITEM,\n            index,\n            type_of: type_of\n        })\n    }\n}\n\nexport const clearItem = () => {\n    return dispatch => {\n        dispatch({\n            type: CLEAR_ITEM\n        })\n    }\n}","import React from 'react'\nimport './Header.scss';\n\nfunction Header() {\n    return (\n        <header className=\"Header\">\n             <div className=\"Header__logo\">\n                <h1>REACT POS</h1>\n                <p>Copyright 2020 @alfarisilab.com</p>\n             </div>\n        </header>\n    )\n}\n\nexport default Header\n","const data = [\n    {\n        data: '21 Mei 2021',\n        total: 'Rp. 540.000',\n        invoiceNumber: 'INV-001'\n    },\n    {\n        data: '21 Mei 2021',\n        total: 'Rp. 540.000',\n        invoiceNumber: 'INV-002'\n    },\n    {\n        data: '21 Mei 2021',\n        total: 'Rp. 540.000',\n        invoiceNumber: 'INV-003'\n    },\n    {\n        data: '21 Mei 2021',\n        total: 'Rp. 1.540.000',\n        invoiceNumber: 'INV-004'\n    },\n    {\n        data: '21 Mei 2021',\n        total: 'Rp. 540.000',\n        invoiceNumber: 'INV-001'\n    }\n];\n\n// const dataEmpty = [];\n\nexport default data;","import React,  { useEffect, useState } from 'react';\nimport './Nav.scss';\nimport { NavLink } from 'react-router-dom';\nimport data from './NavData';\nimport { FiArrowRightCircle } from 'react-icons/fi';\nimport { connect } from 'react-redux';\nimport {\n    getTransaction\n} from './../../store/actions/transaction';\nimport { formatRupiah } from './../../utils/index';\n\nfunction Nav({\n    transaction,\n    isLoading,\n    error,\n    onLoadTransaction\n}) {\n\n    const [query] = useState({\n        page: 1\n    })\n\n    useEffect( () => {\n        onLoadTransaction(query)\n    }, [ query, onLoadTransaction ])\n\n\n    return (\n        <div className=\"Nav\">\n            <div className=\"Navigation\">\n                <h1 className=\"Navigation__heading mb-medium\">History</h1>\n                {data.length === 0 && (\n                <div className=\"EmptyTransaction\">\n                    <h3>You have not made any transaction yet</h3>\n                </div>\n                )}\n                <ul className=\"Navigation__items\">\n                    {!isLoading && transaction && transaction.map( (item, i) => {\n\n                        let total = 0;\n                        item.get_items.forEach(k => {\n                            total += k.qty * k.get_menu.price;\n                        })\n\n                        return (\n                            <li key={i} className=\"Navigation__items_item\">\n                                <NavLink exact to={`/transaction/${item.sc_key}`} className=\"Navigation__items_item_link\">\n                                    <h3>{item.created_at}</h3>\n                                    <h4>{item.no_trx}</h4>\n                                    <p>{formatRupiah(total.toString())}</p>\n                                    <button>\n                                        Detail\n                                        <FiArrowRightCircle className=\"btn_icon\" />\n                                    </button>\n                                </NavLink>\n                            </li>\n                        )\n                    })}\n                    \n                </ul>\n                \n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        transaction: state.transaction.data,\n        isLoading: state.transaction.isLoading,\n        error: state.transaction.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLoadTransaction: (query) => dispatch( getTransaction(query) ) \n    }\n}\n\nexport default connect(mapStateToProps , mapDispatchToProps) (Nav)\n","import React from 'react';\nimport Aside from '../components/Aside/Aside';\nimport Header from '../components/Header/Header';\nimport Nav from '../components/Nav/Nav';\nimport './Layout.scss';\n\nimport { OrderMenuProvider } from './../context/open-order-mobile-context';\n\nfunction Layout( { children } ) {\n    return (\n        <OrderMenuProvider>\n            <div className=\"Layout\">\n                <Header />\n                <Nav />\n                <main className=\"Main\">\n                    {children}\n                </main>\n                <Aside />\n            </div>\n        </OrderMenuProvider>\n    )\n}\n\nexport default Layout\n","import {\n    BACK_STATE,\n    CLEAR_DATA_MENU,\n    LOAD_MENU_FAILED,\n    LOAD_MENU_START,\n    LOAD_MENU_SUCCESS,\n    LOAD_MORE,\n    SEARCH_MENU,\n    SET_ACTIVE_MENU\n } from './action';\nimport { fetchMenu } from './../../api/menu';\n\n\n\nexport const getLoadStart = () => ({ type: LOAD_MENU_START });\n\nexport const getMenu = query => {\n    return dispatch => {\n        dispatch( getLoadStart() );\n        fetchMenu(query)\n        .then(res => {\n            console.log( res); \n            dispatch({ type: LOAD_MENU_SUCCESS, payload: res.data.results })\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch({ type: LOAD_MENU_FAILED, error: err.message })\n        })\n    }\n}\n\nexport const clearMenu = () => {\n    return dispatch => {\n        dispatch({\n            type: CLEAR_DATA_MENU\n        })\n    }\n}\n\n\nexport const setActiveMenu = (menuName) => {\n    return dispatch => {\n        dispatch({\n            type: SET_ACTIVE_MENU,\n            payload: menuName\n        })\n    }\n}\n\nexport const loadMoreMenu = () => {\n    return dispatch => {\n        dispatch({\n            type: LOAD_MORE\n        })\n    }\n}\n\nexport const searchMenu = ( value ) => {\n    return dispatch => {\n        dispatch({\n            type: SEARCH_MENU,\n            payload: value\n        })\n    }\n}\n\nexport const backState = () => {\n    return dispatch => {\n        dispatch({\n            type: BACK_STATE\n        })\n    }\n}","import Axios from './AxiosInstance';\n\nexport const fetchMenu = ( query ) => {\n    let url = `/pos/menu?page=${query.page}`;\n\n    if(query.isActiveCategory !== 'All'){\n        url += `&query&category=${query.isActiveCategory}`;\n    }\n\n    if(query.searchText){\n        url += `&search=${query.searchText}`\n    }\n\n    return Axios.get(url, query);\n}","import React from 'react'\nimport './BottomOrder.scss';\nimport { connect } from 'react-redux';\nimport { formatRupiah } from './../../utils/index';\n\nfunction BottomOrder({ onClick, order_data }) {\n\n    const subTotalArr = order_data.map(item => item.price * item.qty);\n\n    const total = subTotalArr.reduce((a, b) => a + b , 0);\n\n\n    return (\n        <div className=\"BottomOrder\">\n            <div className=\"BottomContainer\">\n                <div className=\"BottomContainer__info\">\n                    <p>{order_data.length} Items</p>\n                    <h1>Rp, {formatRupiah(total.toString())}</h1>\n                </div>\n                <button \n                    disabled={order_data.length === 0}\n                    onClick={onClick} \n                    className=\"BottomContainer__btn\">\n                    SHOW DETAIL\n                </button>\n            </div>\n            \n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        order_data: state.orders.data\n    }\n}\n\nexport default connect(mapStateToProps, null) (BottomOrder)\n","import React from 'react';\nimport './Loader.css';\n\nfunction Loader() {\n    return <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n}\n\nexport default Loader\n","import { useState } from 'react'\n\nfunction useQuantityCounter( initialValue ) {\n\n    const [qty, setQty] = useState( initialValue );\n\n    const changeQtyHandler = (operation) => {\n        if( operation === '+'){\n            setQty(prevState => prevState += 1)\n        }else {\n            if(qty > 1){\n                setQty(prevState => prevState -= 1)\n            }\n        }\n    }\n\n    return [qty, changeQtyHandler];\n}\n\nexport default useQuantityCounter\n","import React, { useState } from 'react';\nimport Modal from '../../../UI/Modal/Modal';\nimport './ConfirmOrderModal.scss';\n\n//hooks\nimport useQuantityCounter from '../../../../hooks/useQuantityCounter';\n\nconst ConfirmOrderModal = ({\n    isOpen,\n    onClose,\n    onSubmit,\n    selectedMenu\n}) => {\n  \n    const { photo, menu_name, price, id } = selectedMenu;\n    const [qty, changeQtyHandler] = useQuantityCounter(1);\n    const [notes, setNotes] = useState('');\n    \n    const submitHandler = () => {\n        const data = {\n            photo,\n            menu_name,\n            price,\n            qty,\n            notes,\n            id,\n            showInput: false\n        };\n\n        onSubmit(data);\n    }\n\n    return (\n        <Modal\n            isShow={isOpen}\n            onClose={onClose}\n            title=\"Confirm Order\"\n            onSubmit={submitHandler}\n        >\n            <div className=\"ConfirmOrder\">\n\n                <div className=\"ConfirmOrder__info\">\n                    <img \n                        alt=\"confirmorder\"\n                        src={photo} \n                    />\n                </div>\n                <div className=\"ConfirmOrder__details\">\n                    <h6>Details Checkout</h6>\n                    <div className=\"ConfirmOrder__details_title\">\n                        <h1>{menu_name}</h1>\n                        <h3>Total: Rp. {price * qty}</h3>\n                    </div>\n                    \n                    <div className=\"ConfirmOrder__details__control\">\n                        <button \n                            onClick={() => changeQtyHandler('-')} \n                            disabled={qty === 1}\n                            >-\n                        </button>\n                        <span>{qty}</span>\n                        <button \n                            onClick={() => changeQtyHandler('+')}\n                            >+\n                        </button>\n                    </div>\n\n                    <textarea \n                        rows=\"8\"\n                        onChange={(e) => setNotes(e.target.value)}\n                        placeholder=\"Add Notes in here ...\"\n                        value={notes}\n                        >\n                        \n                    </textarea>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default ConfirmOrderModal;\n","import React from 'react'\n\nconst Categorys = ({ category, isActiveCategory, setActiveMenu, searchText, datapage }) => {\n\n    let categories = (\n        <ul className=\"Menu__categorys\">\n            {category.map((item, _) => {\n                return (\n                <li key={_} className=\"Menu__categorys-item\">\n                    <button \n                        onClick={() => setActiveMenu(item.name)}\n                        className={`Menu__categorys-btn ${isActiveCategory === item.name && `Menu__categorys-btn-active`}`}>\n                        {item.name}\n                    </button>\n                </li>\n                )\n            })}\n        </ul>\n    )\n\n    if(searchText){\n        categories = (\n            <div className=\"Menu__results_search\">\n                <h2>Search : {searchText} </h2>\n                <h3>Result : {datapage && datapage.total} Item </h3>\n            </div>\n        )\n    }\n\n    return categories;\n}\n\nexport default Categorys;\n","import React from 'react'\nimport { formatRupiah } from './../../../utils/index';\n\nconst MenuItem = ({ photo, menu_name, price, onSelected, id }) => {\n    \n    let image = <div className=\"imagePlaceholder\"></div> \n    if(photo){\n        image = (\n            <img\n                className=\"Menu__lists-item-img\"\n                src={photo} alt={menu_name} \n            />\n        );\n    }\n\n    return (\n        <div className=\"Menu__lists-item\">\n            <figure>\n                {image}\n                <button\n                    className=\"Menu__lists-item-btnAdd\" \n                    onClick={() => onSelected({ photo, menu_name, price, id })}>ADD\n                </button>\n            </figure>\n            <div className=\"Menu__lists-item-info\">\n                <div>\n                    <h4>{menu_name.length > 20 ? `${menu_name.slice(0, 20)}...` : menu_name }</h4>\n                    <p>{formatRupiah(price.toString())}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default MenuItem;\n","import React, { useContext, useEffect, useState, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport debounce from 'lodash.debounce';\n\n//action\nimport { getMenu, clearMenu, setActiveMenu, loadMoreMenu, searchMenu, backState } from '../../store/actions/menu';\nimport { addToOrder } from './../../store/actions/orders';\n\nimport './Menu.scss';\nimport BottomOrder from '../../components/BottomOrder/BottomOrder';\nimport OpenOrderMobileContext from '../../context/open-order-mobile-context';\nimport Loader from '../../components/UI/Loader/Loader';\nimport ConfirmOrderModal from '../../components/Menu/Modal/ConfirmOrderModal/ConfirmOrderModal';\nimport Categorys from '../../components/Categorys/Categorys';\nimport MenuItem from '../../components/Menu/MenuItem/MenuItem';\n\n\nconst Menu = ({\n    query,\n\n    onLoadMenu,\n    isLoading,\n    error,\n    data,\n    datapage,\n    //orders\n    onAddOrder,\n    onClearMenu,\n    onSetActiveMenu,\n    onLoadMore,\n    onSearchMenu,\n    onBackToState\n}) => {\n\n    const { page, searchText, isActiveCategory } = query;\n  \n    const [selectedMenu, setSelectedMenu] = useState(null);\n    const [isOpenConfirmMenu, setIsOpenConfirmMenu] = useState(false);\n    const OpenOrderMobileCTX = useContext(OpenOrderMobileContext);\n\n    const changeHandler = event => {\n        onClearMenu();\n        onSearchMenu(event.target.value)\n    }\n\n    const debounceChangeHandler = useMemo(() => {\n        return debounce(changeHandler, 400)\n    }, [  ])\n    \n    useEffect( () => {\n        console.log('back state')\n        onBackToState()\n    }, [ onBackToState ])\n\n    useEffect( () => {\n\n        onLoadMenu({\n            isActiveCategory: isActiveCategory,\n            page: page,\n            searchText: searchText\n        });\n    \n        return () => {\n            debounceChangeHandler.cancel()\n        }\n\n    }, [ isActiveCategory, page, searchText, onLoadMenu, debounceChangeHandler ])\n\n\n    const activeMenuHandler = (menuName) => {\n        onClearMenu()\n        onSetActiveMenu(menuName);\n    }\n\n    const onSelectMenuHandler = ( item ) => {\n        setIsOpenConfirmMenu(true);\n        setSelectedMenu(item);\n    }\n\n    const onCancelOrderHandler = () => {\n        setIsOpenConfirmMenu(false)\n    }\n\n    const onSubmitOrderHandler = (items) => {\n        onAddOrder(items)\n        setSelectedMenu(null);\n        setIsOpenConfirmMenu(false);\n    }\n\n\n    return (\n        <div className=\"Menu\">\n\n            <section className=\"Menu__heading\">\n                <h1>Menu</h1>\n                <input \n                    placeholder=\"Search Makanan, Minuman, dll\"\n                    \n                    onChange={debounceChangeHandler}\n                />\n            </section>\n\n            {/* Category List start  */}\n            <Categorys \n                category={query.category} \n                isActiveCategory={query.isActiveCategory} \n                setActiveMenu={(name) => activeMenuHandler(name)}\n                searchText={query.searchText}  \n                datapage={datapage}              \n            />\n            {/* Category List end  */}\n\n            {/*  Menu items Start  */}\n            <section className=\"Menu__lists\">\n                {data \n                    && data.length > 0 \n                    && data.map((item, i) => \n                        <MenuItem \n                            key={i} \n                            {...item} \n                            onSelected={(obj) => onSelectMenuHandler(obj)} \n                        />\n                    )\n                }\n               \n                {isLoading && (<div className=\"Loader-center\"><Loader /> </div>)}\n                {error && <p>Something went wrong!</p>}\n            </section>\n            {/*  Menu items End  */}\n            \n            <div className=\"Menu__action\">\n                {!isLoading && datapage && datapage.last_page > query.page && <button className=\"Menu_btn_loadmore\" onClick={onLoadMore}> Load More </button> } \n            </div>\n            {/* Modal Confirm start  */}\n            {selectedMenu && (\n                <ConfirmOrderModal\n                    isOpen={isOpenConfirmMenu}\n                    selectedMenu={selectedMenu}\n                    onClose={onCancelOrderHandler}\n                    onSubmit={onSubmitOrderHandler}\n                />\n            )}\n            {/* Modal Confirm end  */}\n     \n            \n            <BottomOrder onClick={OpenOrderMobileCTX.onToggle} />\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        //Menu\n        isLoading: state.menu.isLoading,\n        data: state.menu.data,\n        error: state.menu.error,\n        datapage: state.menu.page,\n        query: state.menu.query\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLoadMenu: ( query ) => dispatch( getMenu(query)  ),\n        onAddOrder: (items) => dispatch( addToOrder(items) ),\n        onClearMenu: () => dispatch( clearMenu() ),\n        onSetActiveMenu: (menuName) => dispatch( setActiveMenu(menuName) ),\n        onLoadMore: () => dispatch( loadMoreMenu() ),\n        onSearchMenu: (value) => dispatch( searchMenu(value) ),\n        onBackToState: () => dispatch(backState())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu)\n","import React from 'react'\n\nfunction Transaction() {\n    return (\n        <div>\n            <h1>List Transaction</h1>\n        </div>\n    )\n}\n\nexport default Transaction\n","import React, { useEffect } from 'react'\nimport './DetailTransaction.scss';\nimport { Link , useParams} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { FiArrowRight } from 'react-icons/fi'\nimport {\n    getDetail\n} from './../../../store/actions/transaction';\nimport { formatRupiah } from './../../../utils/index';\n\nfunction DetailTransaction({\n\n    onLoadDetail,\n    isLoading,\n    data,\n    error\n\n}) {\n\n    const { id } = useParams();\n\n    useEffect( () => {\n        onLoadDetail(id)\n    }, [id, onLoadDetail])\n\n    let total = 0;\n    const DisplayItem = !isLoading && data && data.get_items.map((item, i) => {\n\n        total += item.qty * item.get_menu.price\n        \n        \n\n        return (\n            <li key={i} className=\"DetailTrx_item\">\n                <figure> \n                    <img src={item.get_menu.photo} alt=\"Item\" />\n                </figure>\n                <h5>{item.get_menu.menu_name}</h5>\n                <p>{item.qty} x</p>\n                <p>{formatRupiah(item.get_menu.price.toString()) }</p>\n            </li>\n        )\n    })\n\n    return (\n        <div className=\"DetailTrx\">\n            <section className=\"DetailTrx_heading\">\n                <h1>Detail Transaction</h1>\n                <Link to=\"/\">\n                    <span>Back to Menu</span> \n                    <FiArrowRight />\n                </Link>\n            </section>\n            {isLoading && <p>Loading...</p>}\n\n            {!isLoading && data && (\n                <section className=\"DetailTrx_Info\">\n                    <div className=\"DetailTrx_Info-member\">\n                        <h3>{data.no_trx}</h3>\n                        <h4>{data.created_at}</h4>\n                        <h4>{data.name} - {data.email}</h4>\n                        <h4>{data.phone_number}</h4>\n                    </div>\n    \n                    <div className=\"DetailTrx_Info-orders\">\n                        <h4>Order List</h4>\n    \n                        <ul className=\"DetailTrx_lists\">\n                            {DisplayItem}\n                        </ul>\n    \n                        <div className=\"DetailTrx_total\">\n                            <h1>Total</h1>\n                            <p>{ formatRupiah(total.toString())} </p>\n                        </div>\n    \n                        <div className=\"DetailTrx_thx\">\n                            <h6>Thank You : )</h6>\n                            <p>I Hope You Are Happy</p>\n                            <Link to=\"/\">Order Again</Link>\n                        </div>\n                    </div>\n    \n                </section>\n            )}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        data: state.transaction.detail_transaction,\n        isLoading: state.transaction.isLoadDetail,\n        error: state.transaction.errorDetail\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLoadDetail: ( id ) => dispatch( getDetail(id) ) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailTransaction)\n","import './App.scss';\nimport Layout from './hoc/Layout';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Menu from './containers/Menu/Menu';\nimport Transaction from './containers/Transaction/Transaction';\nimport DetailTransaction from './containers/Transaction/DetailTransaction/DetailTransaction';\n\nfunction App() {\n  return (\n    <Layout>\n         <Switch>\n            <Route exact path=\"/\" component={Menu} />\n            <Route exact path=\"/transaction/\" component={Transaction} />\n            <Route path=\"/transaction/:id\" component={DetailTransaction} />\n         </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \n    BACK_STATE,\n    CLEAR_DATA_MENU,\n    DETAIL_TRX_START,\n    LOAD_MENU_FAILED,\n    LOAD_MENU_START, \n    LOAD_MENU_SUCCESS,\n    LOAD_MORE,\n    SEARCH_MENU,\n    SET_ACTIVE_MENU\n} from './../actions/action';\n\nconst initialState = {\n    data: [],\n    page: null,\n    isLoading: false,\n    error: null,\n\n    query: {\n        category: [ \n            { name: 'All' }, \n            { name: 'Makanan' }, \n            { name: 'Minuman' } \n        ],\n        isActiveCategory: 'All',\n        searchText: null,\n        page: 1\n    }\n}\n\n\nconst menu = (state = initialState, action) => {\n    switch(action.type){\n\n        case LOAD_MENU_START:\n            return {\n                ...state,\n                isLoading: true\n            }\n\n        case LOAD_MENU_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n                data: [ ...state.data, ...action.payload.data],\n                page: {...action.payload}\n            }\n\n        case LOAD_MENU_FAILED:\n            return {\n                ...state,\n                isLoading: false,\n                data: null,\n                error: action.error,\n            }\n\n        case CLEAR_DATA_MENU:\n        return {\n            ...state,\n            data: []\n        }\n\n        case BACK_STATE:\n            return {\n                ...state,\n                data: [],\n                page: null,\n                query: {\n                    ...state.query,\n                    page: 1\n                }\n            }\n\n        case SET_ACTIVE_MENU:\n            return {\n                ...state,\n                query: {\n                    ...state.query,\n                    isActiveCategory: action.payload,\n                    page: 1\n                }\n            }\n\n        case LOAD_MORE:\n            return {\n                ...state,\n                query: {\n                    ...state.query,\n                    page: state.query.page + 1\n                }\n            }\n\n        case SEARCH_MENU:\n            return {\n                ...state,\n                query: {\n                    ...state.query,\n                    searchText: action.payload,\n                    page: 1,\n                    isActiveCategory: 'All'\n                }\n            }\n\n\n        case DETAIL_TRX_START:\n            return {\n                ...state,\n                data: [],\n                page: null,\n                query: {\n                    ...state.query,\n                    page: 1\n                }\n            }\n\n       \n\n        default:\n            return state;\n    }\n}\n\nexport default menu;","import {\n    ADD_TO_ORDER, CHANGE_INPUT_ITEM, CHANGE_QTY_ITEM, CLEAR_ITEM, CREATE_TRX_FAILED, CREATE_TRX_START, CREATE_TRX_SUCCESS, REMOVE_NOTE_ITEM, REMOVE_ORDER_ITEM, SHOW_INPUT_ITEM\n} from './../actions/action';\n\n\nconst inititalState = {\n    data: [],\n    isLoadingSubmited: false,\n    errorSubmited: null\n}\n\nconst orders = (state = inititalState, action) => {\n    let getItem = null;\n    let copyAllData = null;\n    let findIndex = null;\n\n    switch(action.type){\n\n        case ADD_TO_ORDER:\n            copyAllData = [ ...state.data ];\n            findIndex = copyAllData.findIndex(item => item.id === action.payload.id);\n\n            if(findIndex !== -1) {\n                getItem = copyAllData[findIndex];\n                getItem['qty'] = getItem['qty'] + action.payload.qty;\n                getItem['notes'] = action.payload.notes;\n                copyAllData[findIndex] = getItem;\n            }else {\n                copyAllData = [ ...state.data , action.payload ];\n            }\n\n            return {\n                ...state,\n                data: copyAllData\n            }\n\n        case REMOVE_ORDER_ITEM:\n            return {\n                ...state,\n                data: state.data.filter((item, i) => i !== action.index)\n            }\n\n        case REMOVE_NOTE_ITEM:\n            copyAllData = [ ...state.data ];\n            getItem =  copyAllData[action.index];\n            getItem['notes'] = '';\n            copyAllData[action.index] = getItem;\n\n            return {\n                ...state,\n                data: copyAllData\n            }\n\n        case SHOW_INPUT_ITEM:\n            copyAllData = [ ...state.data ];\n            getItem = copyAllData[action.index];\n            getItem['showInput'] = !getItem.showInput;\n            copyAllData[action.index] = getItem;\n            return {\n                ...state,\n                data: copyAllData\n            }\n\n        case CHANGE_INPUT_ITEM:\n            copyAllData = [ ...state.data ];\n            getItem = copyAllData[action.index];\n            getItem['notes'] = action.value;\n            copyAllData[action.index] = getItem\n            return {\n                ...state,\n                data: copyAllData\n            }\n\n        case CHANGE_QTY_ITEM:\n            copyAllData = [ ...state.data ];\n            getItem = copyAllData[action.index];\n            getItem['qty'] = action.type_of === 'increase' ? getItem.qty += 1 : getItem.qty -= 1;\n            copyAllData[action.index] = getItem\n            return {\n                ...state,\n                data: copyAllData\n            }\n\n        case CREATE_TRX_START:\n            return {\n                ...state,\n                isLoadingSubmited: true,\n                errorSubmited: null\n            }\n        \n        case CREATE_TRX_SUCCESS:\n            return {\n                ...state,\n                isLoadingSubmited: false,\n                data: [],\n                errorSubmited: null\n            }\n\n        case CREATE_TRX_FAILED:\n            return {\n                ...state,\n                isLoadingSubmited: false,\n                errorSubmited: action.error\n            }\n\n        case CLEAR_ITEM:\n            return {\n                ...state,\n                data: []\n            }\n        \n        default:\n            return state;\n    }\n}\n\nexport default orders;\n\n","import {\n    LOAD_TRX_START,\n    LOAD_TRX_SUCCESS,\n    LOAD_TRX_FAILED,\n    CREATE_TRX_SUCCESS,\n    DETAIL_TRX_START,\n    DETAIL_TRX_SUCCESS,\n    DETAIL_TRX_FAILED\n} from './../actions/action';\n\nconst initialState = {\n    data: [],\n    pagination: null,\n    isLoading: false,\n    error: null,\n\n    detail_transaction: null,\n    isLoadDetail: false,\n    errorDetail: null\n}\n\nconst transaction = (state = initialState, action ) => {\n\n    switch(action.type)\n    {\n        case CREATE_TRX_SUCCESS:\n            return {\n                ...state,\n                data: [ action.payload, ...state.data]\n            }   \n\n        case LOAD_TRX_START:\n            return {\n                ...state,\n                isLoading: true,\n                error: null \n            }\n\n        case LOAD_TRX_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                data: action.payload.data,\n                pagination: action.payload\n            }\n\n        case LOAD_TRX_FAILED:\n            return {\n                ...state,\n                isLoading: false,\n                error: action.error\n            }\n\n        case DETAIL_TRX_START:\n            return {\n                ...state,\n                isLoadDetail: true,\n                errorDetail: null,\n                detail_transaction: null\n            }\n\n        case DETAIL_TRX_SUCCESS:\n            return {\n                ...state,\n                isLoadDetail: false,\n                errorDetail: null,\n                detail_transaction: action.payload\n            }\n\n        case DETAIL_TRX_FAILED:\n            return {\n                ...state,\n                isLoadDetail: false,\n                errorDetail: action.error,\n                detail_transaction: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport default transaction","import { combineReducers } from 'redux';\nimport menuReducers from './menu';\nimport orderReducers from './orders';\nimport transactionReducers from './transaction';\n\nconst rootReducers = combineReducers({\n    menu: menuReducers ,\n    orders: orderReducers,\n    transaction: transactionReducers\n})\n\nexport default rootReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducers from './store/reducers';\nimport thunk from 'redux-thunk';\n\n//composerEnhancers\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nlet store = createStore( rootReducers );\nif(composeEnhancers) {\n  store = createStore( rootReducers, composeEnhancers(\n    applyMiddleware( thunk )\n    ) \n  );\n}\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}